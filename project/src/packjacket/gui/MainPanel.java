/*
 * PackJacket - GUI frontend to IzPack to make Java-based installers
 * Copyright (C) 2008 - 2009  Amandeep Grewal, Manodasan Wignarajah
 *
 * PackJacket is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PackJacket is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PackJacket.  If not, see <http://www.gnu.org/licenses/>.
 */
package packjacket.gui;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import packjacket.RunnerClass;
import packjacket.gui.create.CreateInstaller;
import packjacket.xmlcreation.InstallXML;

/**
 * Panel containing tabs, and buttons to create XML/Installer
 * @author Amandeep Grewal
 */
public class MainPanel extends javax.swing.JPanel {

    public boolean optional;

    /** Creates new form MainPanel */
    public MainPanel() {
        initComponents();
        optional = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        createBtn = new javax.swing.JButton();
        optionalTabs = new javax.swing.JCheckBox();
        createXMLBtn = new javax.swing.JButton();

        tabs.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        createBtn.setText("Create Installer");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        optionalTabs.setText("Show Optional");
        optionalTabs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionalTabsActionPerformed(evt);
            }
        });
        CursorController.createListener(this, optionalTabs);

        createXMLBtn.setText("Create XML");
        createXMLBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createXMLBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optionalTabs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(createXMLBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createBtn)
                .addContainerGap())
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn)
                    .addComponent(optionalTabs)
                    .addComponent(createXMLBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        //Checks for errors, and stops if they are any
        if (RunnerClass.mf.error())
            return;
        //Disable main
        RunnerClass.mf.setEnabled(false);
        //Show options to create an installer
        CreateInstaller ci = new CreateInstaller();
        ci.setIconImages(RunnerClass.mf.getIconImages());
        ci.setLocationRelativeTo(RunnerClass.mf);
        ci.pack();
        ci.setVisible(true);
    }//GEN-LAST:event_createBtnActionPerformed

    private void optionalTabsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionalTabsActionPerformed
        //Shows optional tabs if selected
        if (optionalTabs.isSelected() != optional) {
            optional = optionalTabs.isSelected();
            if (optional) {
                tabs.addTab("GUI", RunnerClass.mf.guiPanel);
                tabs.addTab("Packaging", RunnerClass.mf.packagingPanel);
                tabs.addTab("Shortcuts", RunnerClass.mf.shortcutsPanel);
                tabs.addTab("User Input", RunnerClass.mf.userInputPanel);
                tabs.addTab("Processes", RunnerClass.mf.processesPanel);
            } else {
                tabs.remove(RunnerClass.mf.guiPanel);
                tabs.remove(RunnerClass.mf.packagingPanel);
                tabs.remove(RunnerClass.mf.shortcutsPanel);
                tabs.remove(RunnerClass.mf.userInputPanel);
                tabs.remove(RunnerClass.mf.processesPanel);
            }

            RunnerClass.mf.fitContentResize();
            repaint();
//            RunnerClass.mf.pack();
        }
    }//GEN-LAST:event_optionalTabsActionPerformed

    private void createXMLBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createXMLBtnActionPerformed
        //Check for errors
        if (RunnerClass.mf.error())
            return;
        //Asks where to save XML
        File f = GUIUtils.save(new javax.swing.filechooser.FileNameExtensionFilter("XML (.xml)", new String[]{"xml"}));
        if (f != null) {
            if (!f.getName().endsWith(".xml"))
                f = new File(f.getPath() + ".xml");
            //Generates the XML file
            try {
                InstallXML.generateXML(RunnerClass.mf.getXML(), f.getCanonicalPath());
            } catch (IOException ex) {
                RunnerClass.logger.log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_createXMLBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton createBtn;
    public javax.swing.JButton createXMLBtn;
    public javax.swing.JCheckBox optionalTabs;
    public javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
