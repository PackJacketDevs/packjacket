/*
 * PackJacket - GUI frontend to IzPack to make Java-based installers
 * Copyright (C) 2008 - 2009  Amandeep Grewal, Manodasan Wignarajah
 *
 * PackJacket is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PackJacket is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PackJacket.  If not, see <http://www.gnu.org/licenses/>.
 */
package packjacket.gui.packs;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.logging.Level;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import packjacket.RunnerClass;
import packjacket.gui.ArrayListModel;
import packjacket.xml.Pack;
import packjacket.xml.Shortcut;

/**
 * Allows to quickly fix disassociation of create for pack values when renaming pack names
 * @author Manodasan Wignarajah
 */
public class QuickErrorFix extends javax.swing.JPanel {

    /** Creates new form QuickErrorFix */
    public QuickErrorFix(ArrayList<Shortcut> shortcuts) {
        initComponents();
        //Sets up the frame with the shortcuts affected and all pack names
        Pack p = RunnerClass.mf.packsPanel.packs.getElement().clone();
        //Adds the new pack name
        if (!RunnerClass.mf.packsPanel.gen.name.getText().trim().equals("")) {
            p.pack_name = RunnerClass.mf.packsPanel.gen.name.getText().trim();
            packList.addItem(p);
        }
        //Adds all the other packs name, including the one being modified
        for (Pack s : RunnerClass.mf.packsPanel.packs.list)
            if (!s.equals(p))
                packList.addItem(s);
        //Gets and sets the list of shortcuts affected by renaming the pack name
        ArrayListModel<Shortcut> tt = new ArrayListModel<Shortcut>(shortcutList);
        tt.setList(shortcuts);
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                RunnerClass.mf.setMinimumSize(RunnerClass.mf.getPreferredSize());
                RunnerClass.mf.pack();
            }
        });

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        packList = new javax.swing.JComboBox();
        lastListScroll = new javax.swing.JScrollPane();
        shortcutList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        helpBtn = new javax.swing.JButton();
        applyBtn = new javax.swing.JButton();

        jLabel2.setText("Change \"Create for Pack\" value to: ");
        jLabel2.setName("jLabel2"); // NOI18N

        packList.setEditable(true);
        packList.setName("packList"); // NOI18N

        lastListScroll.setName("lastListScroll"); // NOI18N

        shortcutList.setName("shortcutList"); // NOI18N
        lastListScroll.setViewportView(shortcutList);

        jLabel1.setText("Shortcuts to apply change to:");
        jLabel1.setName("jLabel1"); // NOI18N

        helpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/help.png"))); // NOI18N
        helpBtn.setToolTipText("How to use Easy Fix");
        helpBtn.setAlignmentX(0.5F);
        helpBtn.setAlignmentY(0.0F);
        helpBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        helpBtn.setBorderPainted(false);
        helpBtn.setContentAreaFilled(false);
        helpBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        helpBtn.setFocusPainted(false);
        helpBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        helpBtn.setName("helpBtn"); // NOI18N
        helpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBtnActionPerformed(evt);
            }
        });

        applyBtn.setText("Apply Change");
        applyBtn.setName("applyBtn"); // NOI18N
        applyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lastListScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(applyBtn))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packList, 0, 172, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(helpBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyBtn))
                    .addComponent(lastListScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Gets the shortcuts which have \"Create for Pack\" values as the pack currently being edited
     * @return an ArrayList of shortcuts which contains the shortcuts who had the \"Create for Pack\" values as the previous  name of this pack
     */
    public static ArrayList<Shortcut> getShortcuts() {
        ArrayList<Shortcut> tt = new ArrayList<Shortcut>();
        //Goes through all the shortcuts, and checks which ones contain the previous pack name in \"Create for Pack\" and adds those
        for (Shortcut s : RunnerClass.mf.shortcutsPanel.shortcuts.list)
            if (s.createForPacks.contains(RunnerClass.mf.packsPanel.packs.getElement().pack_name))
                tt.add(s);
        return tt;
    }

    /**
     * Displays the instructions on how to use this feature
     * @param evt the action event for the button click
     */
    private void helpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBtnActionPerformed
        //Sets up text pane, formatted
        JTextPane ta = new JTextPane();
        StyledDocument doc = ta.getStyledDocument();
        Style def = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);
        //Regular font
        Style regular = doc.addStyle("regular", def);
        //Bold font
        Style style = doc.addStyle("bold", regular);
        StyleConstants.setBold(style, true);
        try {
            //Adds the messages to show to the user
            doc.insertString(doc.getLength(), "How to use Easy Fix\n\n", doc.getStyle("bold"));
            doc.insertString(doc.getLength(), "Easy Fix will allow you to easily change/update your \"Create for Pack\" values without having to manually go to each shortcut.\n\n", doc.getStyle("regular"));
            doc.insertString(doc.getLength(), "1. Select all the shortcuts (the list of shortcuts allows multiple shortcuts to be clicked) for which you want to apply the same fix to.\n", doc.getStyle("regular"));
            doc.insertString(doc.getLength(), "2. Choose which pack you want to change the value of \"Create for Pack\" to, by either selecting one of the shown packs or typing\n    your own pack name.\n    Note: If you enter a name of a pack which doesn't exist, you will need to create that pack before you create your installer.\n", doc.getStyle("regular"));
            doc.insertString(doc.getLength(), "3. Click the apply button to apply the change and repeat the steps from above for the remaining shortcuts.\n", doc.getStyle("regular"));
        } catch (BadLocationException ex) {
            RunnerClass.logger.log(Level.SEVERE, null, ex);
        }
        ta.setEditable(false);
        ta.setOpaque(false);
        ta.setBorder(BorderFactory.createEmptyBorder());
        JScrollPane sp = new JScrollPane();
        sp.setViewportView(ta);
        sp.setOpaque(false);
        sp.setViewportBorder(BorderFactory.createEmptyBorder());
        sp.setBorder(BorderFactory.createEmptyBorder());
        //Expands 50 right to make less wrapping
        sp.setPreferredSize(new Dimension(
                ta.getPreferredSize().width + 50 < 700 ? ta.getPreferredSize().width + 50 : 700,
                ta.getPreferredSize().height < 500 ? ta.getPreferredSize().height : 500));
        ta.setSelectionStart(0);
        ta.setSelectionEnd(0);
        //Shows message
        JOptionPane.showMessageDialog(this, sp, "Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpBtnActionPerformed

    /**
     * Applies the specified changes to the shortcuts
     * @param evt the action event for the button click
     */
    private void applyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBtnActionPerformed
        //Gets all the indices which are selected
        int index[] = shortcutList.getSelectedIndices();
        //Keeps tracks of the number of elements removed from the list
        int t = 0;
        //temporarily stores the shortcutlist model
        ArrayListModel<Shortcut> tt = (ArrayListModel<Shortcut>) shortcutList.getModel();
        //Stores the list of shortcuts
        ArrayList<Shortcut> ttm = (ArrayList<Shortcut>) RunnerClass.mf.shortcutsPanel.shortcuts.list;
        //The old pack value
        String old = RunnerClass.mf.packsPanel.packs.getElement().pack_name.trim();
        //The value which the user wants the disassociated \"Create for Pack\" values renamed to
        String neww = packList.getSelectedItem().toString().trim();
        RunnerClass.logger.finest("I: " + index.length + " T: " + tt.getSize());
        for (int a : index) {
            //If the list is done, breaks to prevent a bug where when it thinks multiple elements are selected from occuring
            if (tt.getSize() == 0)
                break;
            RunnerClass.logger.finest("a: " + a + " t: " + t);
            int ind = ttm.indexOf(tt.getElementAt(a - t));
            RunnerClass.logger.finest(tt.getElementAt(a - t) + " " + ttm.indexOf(tt.getElementAt(a - t)) + " " + ind);
            ttm.get(ind).createForPacks.remove(old);
            //If the pack isn't already in the \"Create for Pack\" values from before, it adds it
            if (!ttm.get(ind).createForPacks.contains(neww))
                ttm.get(ind).createForPacks.add(neww);
            //Removes the shortcut from shortcutlist
            tt.removeElementAt(a - t);
            //Increments the counter to indicate the number of elements removed from the jlist, to change the indicies according to it
            t++;
        }
        //Checks if the user is done fixing all the disassociation problems, if so remove the panel and continue with setting the updated pack values
        if (tt.getSize() == 0) {
            RunnerClass.mf.removeP();
            RunnerClass.mf.packsPanel.setValues();
        }
    }//GEN-LAST:event_applyBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyBtn;
    private javax.swing.JButton helpBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane lastListScroll;
    private javax.swing.JComboBox packList;
    private javax.swing.JList shortcutList;
    // End of variables declaration//GEN-END:variables
}
