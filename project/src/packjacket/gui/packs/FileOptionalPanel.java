/*
 * PackJacket - GUI frontend to IzPack to make Java-based installers
 * Copyright (C) 2008 - 2009  Amandeep Grewal, Manodasan Wignarajah
 *
 * PackJacket is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PackJacket is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PackJacket.  If not, see <http://www.gnu.org/licenses/>.
 */
package packjacket.gui.packs;

import packjacket.gui.OSPanel;

/**
 * The optional panel for files
 * @author Amandeep Grewal
 */
public class FileOptionalPanel extends javax.swing.JPanel {

    /** Creates new form FileOptionalPanel */
    public FileOptionalPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        overwrite = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        targetdir = new javax.swing.JTextField();
        osPanel = new javax.swing.JPanel();
        renameTarget = new javax.swing.JTextField();
        renameTargetChoice = new javax.swing.JCheckBox();
        unpack = new javax.swing.JCheckBox();

        jLabel3.setText("Target Directory");

        overwrite.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Update", "Overwrite", "Ask True", "Ask False" }));
        overwrite.setToolTipText("<html>Update: if the file is already installed, it will be overwritten;<br>Ask True, Ask False: ask the user what to do and supply default value for non-interactive use;<br>Update. the new file is only installed if it's modification time is newer than the modification time of the already existing file</html>");

        jLabel6.setText("Overwrite");

        targetdir.setText("$INSTALL_PATH/");
        targetdir.setToolTipText("The destination directory");

        javax.swing.GroupLayout osPanelLayout = new javax.swing.GroupLayout(osPanel);
        osPanel.setLayout(osPanelLayout);
        osPanelLayout.setHorizontalGroup(
            osPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 273, Short.MAX_VALUE)
        );
        osPanelLayout.setVerticalGroup(
            osPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        osPanel=new OSPanel();

        renameTarget.setToolTipText("The destination file name");
        renameTarget.setEnabled(false);

        renameTargetChoice.setText("Rename Target File");
        renameTargetChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameTargetChoiceActionPerformed(evt);
            }
        });

        unpack.setText("Unpack");
        unpack.setToolTipText("If the file is an archive, its content will be unpacked and put as individual files in the folder");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unpack, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(renameTargetChoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(renameTarget, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(overwrite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(targetdir, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)))
                    .addComponent(osPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(renameTargetChoice)
                    .addComponent(renameTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unpack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetdir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(overwrite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(osPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void renameTargetChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameTargetChoiceActionPerformed
        // En/Disables the appropriate fields
        if (renameTargetChoice.isSelected())
            renameTarget.setEnabled(true);
        else
            renameTarget.setEnabled(false);
}//GEN-LAST:event_renameTargetChoiceActionPerformed

    /**
     * Calls the renameTargetChoiceActionPerformed to en/Disable the appropriate field
     */
    public void perfomInitialAction() {
        renameTargetChoiceActionPerformed(null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JPanel osPanel;
    public javax.swing.JComboBox overwrite;
    public javax.swing.JTextField renameTarget;
    public javax.swing.JCheckBox renameTargetChoice;
    public javax.swing.JTextField targetdir;
    public javax.swing.JCheckBox unpack;
    // End of variables declaration//GEN-END:variables
}
