/*
 * PackJacket - GUI frontend to IzPack to make Java-based installers
 * Copyright (C) 2008 - 2009  Amandeep Grewal, Manodasan Wignarajah
 *
 * PackJacket is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PackJacket is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PackJacket.  If not, see <http://www.gnu.org/licenses/>.
 */
package packjacket.gui.packs;

import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import packjacket.RunnerClass;
import packjacket.gui.ArrayListModel;
import packjacket.gui.GUIUtils;
import packjacket.gui.OSPanel;
import packjacket.xml.Parsable;

/**
 * The panel for Parsable
 * @author Amandeep Grewal
 */
public class ParsablePanel extends javax.swing.JPanel {

    public ArrayListModel<Parsable> parseables;
    public boolean isEditing;

    /** Creates new form ParsablePanel */
    public ParsablePanel(ArrayListModel<Parsable> parseables) {
        this.parseables = parseables;
        initComponents();
        parsableTargetFile.setModel(GUIUtils.getFilesforComboBoxModel());
        isEditing = false;
    }

    public ParsablePanel(ArrayListModel<Parsable> parseables, int i) {
        this(parseables);
        isEditing = true;
        Parsable pars = parseables.getElement();

        parsableTargetFile.setSelectedItem(pars.targetfile);
        ((OSPanel) osPanel).setOS(pars.os);
        parsableEncoding.setText(pars.encoding);
        parsableType.setSelectedItem(pars.type);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButtonParsable = new javax.swing.JButton();
        parsableEncoding = new javax.swing.JTextField();
        cancelButtonParsable = new javax.swing.JButton();
        jLabel96 = new javax.swing.JLabel();
        parsableType = new javax.swing.JComboBox();
        jLabel97 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        osPanel = new javax.swing.JPanel();
        parsableTargetFile = new javax.swing.JComboBox();

        okButtonParsable.setText("OK");
        okButtonParsable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonParsableActionPerformed(evt);
            }
        });

        parsableEncoding.setToolTipText("Specifiy the encoding of the file to parse.");

        cancelButtonParsable.setText("Cancel");
        cancelButtonParsable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonParsableActionPerformed(evt);
            }
        });

        jLabel96.setText("Type");

        parsableType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plain", "Java Properties File", "Java File", "XML", "Shell", "at", "ant" }));
        parsableType.setToolTipText("Specify a parse type");

        jLabel97.setText("Encoding");

        jLabel1.setText("Target File");

        javax.swing.GroupLayout osPanelLayout = new javax.swing.GroupLayout(osPanel);
        osPanel.setLayout(osPanelLayout);
        osPanelLayout.setHorizontalGroup(
            osPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        osPanelLayout.setVerticalGroup(
            osPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 213, Short.MAX_VALUE)
        );

        osPanel=new OSPanel();

        parsableTargetFile.setEditable(true);
        AutoCompleteDecorator.decorate(parsableTargetFile);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel97)
                            .addComponent(jLabel96)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parsableEncoding, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                            .addComponent(parsableType, 0, 281, Short.MAX_VALUE)
                            .addComponent(parsableTargetFile, 0, 281, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 218, Short.MAX_VALUE)
                        .addComponent(cancelButtonParsable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButtonParsable))
                    .addComponent(osPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(parsableTargetFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel96)
                    .addComponent(parsableType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel97)
                    .addComponent(parsableEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(osPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButtonParsable)
                    .addComponent(okButtonParsable))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonParsableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonParsableActionPerformed

        RunnerClass.mf.removeP();
    }//GEN-LAST:event_cancelButtonParsableActionPerformed

    private void okButtonParsableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonParsableActionPerformed
        Parsable pars;
        if (isEditing)
            pars = parseables.getElement();
        else
            pars = new Parsable();

        StringBuffer errormsg = new StringBuffer();
        if (parsableTargetFile.getSelectedItem().toString().trim().equals(""))
            errormsg.append("You have not specified a file to parse.\n");
        if (parsableEncoding.getText().trim().equals(""))
            errormsg.append("You have not specified an encoding.\n");
        errormsg.append(((OSPanel) osPanel).getError());
        if (errormsg.length() != 0) {
            String msg = errormsg.substring(0, errormsg.length() - 1);
            JOptionPane.showMessageDialog(RunnerClass.mf, msg, "Incomplete Data", JOptionPane.ERROR_MESSAGE);
            return;
        }

        pars.targetfile = parsableTargetFile.getSelectedItem().toString();
        pars.encoding = parsableEncoding.getText();
        pars.type = parsableType.getSelectedItem().toString();
        pars.os = ((OSPanel) osPanel).getOS();

        if (!isEditing)
            parseables.add(pars);


        RunnerClass.mf.removeP();
    }//GEN-LAST:event_okButtonParsableActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButtonParsable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JButton okButtonParsable;
    private javax.swing.JPanel osPanel;
    private javax.swing.JTextField parsableEncoding;
    private javax.swing.JComboBox parsableTargetFile;
    private javax.swing.JComboBox parsableType;
    // End of variables declaration//GEN-END:variables
}
